apiVersion: apps/v1
kind: Deployment
metadata:
  name: thoughts-service
  labels:
    app: thoughts
    service: thoughts
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: thoughts
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: thoughts
        service: thoughts
        tier: backend
    spec:
      containers:
      - name: thoughts
        image: aurora/thoughts:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 4001
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: thoughts-secrets
              key: mongodb-uri
        - name: IDENTITY_SERVICE_URL
          value: "http://identity-service:5000"
        - name: FRONTEND_URL
          value: "http://frontend-service:3000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # Liveness probe - checks if the service is alive
        # If this fails, Kubernetes will restart the pod
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        # Readiness probe - checks if the service can handle traffic
        # If this fails, Kubernetes will stop sending traffic to this pod
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        # Startup probe - checks if the application has started
        # Kubernetes will wait for this before checking liveness/readiness
        startupProbe:
          httpGet:
            path: /health/startup
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 12  # 12 * 5s = 60s max startup time
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: thoughts-service
  labels:
    app: thoughts
    service: thoughts
spec:
  type: ClusterIP
  ports:
  - port: 4001
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: thoughts

